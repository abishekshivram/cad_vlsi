$version Generated by VerilatedVcd $end
$date Tue Dec  7 14:49:07 2021
 $end
$timescale   1ps $end

 $scope module top $end
  $var wire  1 # CLK $end
  $var wire  1 $ RST_N $end
  $scope module mkcheck $end
   $var wire  1 M CAN_FIRE_RL_check1_update1 $end
   $var wire  1 N CAN_FIRE_RL_check1_update2 $end
   $var wire  1 O CAN_FIRE_RL_two_cycle1 $end
   $var wire  1 P CAN_FIRE_RL_two_cycle2 $end
   $var wire  1 Q CAN_FIRE_RL_two_cycle3 $end
   $var wire  1 R CAN_FIRE_RL_two_cycle4 $end
   $var wire  1 S CAN_FIRE_RL_two_cycle5 $end
   $var wire  1 T CAN_FIRE_RL_two_cycle6 $end
   $var wire  1 U CAN_FIRE_RL_update_counter $end
   $var wire  1 % CLK $end
   $var wire  1 _ NOT_counter_SLT_2___d10 $end
   $var wire  1 & RST_N $end
   $var wire  1 V WILL_FIRE_RL_check1_update1 $end
   $var wire  1 W WILL_FIRE_RL_check1_update2 $end
   $var wire  1 X WILL_FIRE_RL_two_cycle1 $end
   $var wire  1 Y WILL_FIRE_RL_two_cycle2 $end
   $var wire  1 Z WILL_FIRE_RL_two_cycle3 $end
   $var wire  1 [ WILL_FIRE_RL_two_cycle4 $end
   $var wire  1 \ WILL_FIRE_RL_two_cycle5 $end
   $var wire  1 ] WILL_FIRE_RL_two_cycle6 $end
   $var wire  1 ^ WILL_FIRE_RL_update_counter $end
   $var wire 32 ' check1 [31:0] $end
   $var wire 32 ( check1_D_IN [31:0] $end
   $var wire  1 ) check1_EN $end
   $var wire 32 * check2 [31:0] $end
   $var wire 32 + check2_D_IN [31:0] $end
   $var wire  1 , check2_EN $end
   $var wire 32 - counter [31:0] $end
   $var wire 32 . counter_D_IN [31:0] $end
   $var wire  1 / counter_EN $end
   $var wire  1 7 router1_EN_get_valueVC1 $end
   $var wire  1 8 router1_EN_get_valueVC2 $end
   $var wire  1 9 router1_EN_get_valueVC3 $end
   $var wire  1 : router1_EN_get_valueVC4 $end
   $var wire  1 ; router1_EN_get_valueVC5 $end
   $var wire  1 < router1_EN_get_valueVC6 $end
   $var wire  1 = router1_EN_put_value $end
   $var wire  1 > router1_RDY_get_valueVC1 $end
   $var wire  1 ? router1_RDY_get_valueVC2 $end
   $var wire  1 @ router1_RDY_get_valueVC3 $end
   $var wire  1 A router1_RDY_get_valueVC4 $end
   $var wire  1 B router1_RDY_get_valueVC5 $end
   $var wire  1 C router1_RDY_get_valueVC6 $end
   $var wire  1 D router1_RDY_put_value $end
   $var wire 32 0 router1_get_valueVC1 [31:0] $end
   $var wire 32 1 router1_get_valueVC2 [31:0] $end
   $var wire 32 2 router1_get_valueVC3 [31:0] $end
   $var wire 32 3 router1_get_valueVC4 [31:0] $end
   $var wire 32 4 router1_get_valueVC5 [31:0] $end
   $var wire 32 5 router1_get_valueVC6 [31:0] $end
   $var wire 32 6 router1_put_value_flit [31:0] $end
   $var wire  1 F router2_EN_get_valueVC1 $end
   $var wire  1 G router2_EN_get_valueVC2 $end
   $var wire  1 H router2_EN_get_valueVC3 $end
   $var wire  1 I router2_EN_get_valueVC4 $end
   $var wire  1 J router2_EN_get_valueVC5 $end
   $var wire  1 K router2_EN_get_valueVC6 $end
   $var wire  1 L router2_EN_put_value $end
   $var wire 32 E router2_put_value_flit [31:0] $end
   $scope module router1 $end
    $var wire  1 P! CAN_FIRE_RL_invert_cycle $end
    $var wire  1 Q! CAN_FIRE_RL_read_input_link_and_send_to_VC_even $end
    $var wire  1 R! CAN_FIRE_RL_read_input_link_and_send_to_VC_odd $end
    $var wire  1 S! CAN_FIRE_get_valueVC1 $end
    $var wire  1 T! CAN_FIRE_get_valueVC2 $end
    $var wire  1 U! CAN_FIRE_get_valueVC3 $end
    $var wire  1 V! CAN_FIRE_get_valueVC4 $end
    $var wire  1 W! CAN_FIRE_get_valueVC5 $end
    $var wire  1 X! CAN_FIRE_get_valueVC6 $end
    $var wire  1 Y! CAN_FIRE_put_value $end
    $var wire  1 ` CLK $end
    $var wire  1 e EN_get_valueVC1 $end
    $var wire  1 h EN_get_valueVC2 $end
    $var wire  1 k EN_get_valueVC3 $end
    $var wire  1 n EN_get_valueVC4 $end
    $var wire  1 q EN_get_valueVC5 $end
    $var wire  1 t EN_get_valueVC6 $end
    $var wire  1 c EN_put_value $end
    $var wire  1 g RDY_get_valueVC1 $end
    $var wire  1 j RDY_get_valueVC2 $end
    $var wire  1 m RDY_get_valueVC3 $end
    $var wire  1 p RDY_get_valueVC4 $end
    $var wire  1 s RDY_get_valueVC5 $end
    $var wire  1 v RDY_get_valueVC6 $end
    $var wire  1 d RDY_put_value $end
    $var wire  1 a RST_N $end
    $var wire  1 Z! WILL_FIRE_RL_invert_cycle $end
    $var wire  1 [! WILL_FIRE_RL_read_input_link_and_send_to_VC_even $end
    $var wire  1 \! WILL_FIRE_RL_read_input_link_and_send_to_VC_odd $end
    $var wire  1 ]! WILL_FIRE_get_valueVC1 $end
    $var wire  1 ^! WILL_FIRE_get_valueVC2 $end
    $var wire  1 _! WILL_FIRE_get_valueVC3 $end
    $var wire  1 `! WILL_FIRE_get_valueVC4 $end
    $var wire  1 a! WILL_FIRE_get_valueVC5 $end
    $var wire  1 b! WILL_FIRE_get_valueVC6 $end
    $var wire  1 c! WILL_FIRE_put_value $end
    $var wire 32 d! b__h929 [31:0] $end
    $var wire  1 w cycle $end
    $var wire  1 x cycle_D_IN $end
    $var wire  1 y cycle_EN $end
    $var wire 32 f get_valueVC1 [31:0] $end
    $var wire 32 i get_valueVC2 [31:0] $end
    $var wire 32 l get_valueVC3 [31:0] $end
    $var wire 32 o get_valueVC4 [31:0] $end
    $var wire 32 r get_valueVC5 [31:0] $end
    $var wire 32 u get_valueVC6 [31:0] $end
    $var wire  1 !! input_link_CLR $end
    $var wire  1 "! input_link_DEQ $end
    $var wire 32 } input_link_D_IN [31:0] $end
    $var wire 32 ~ input_link_D_OUT [31:0] $end
    $var wire  1 #! input_link_EMPTY_N $end
    $var wire  1 $! input_link_ENQ $end
    $var wire  1 %! input_link_FULL_N $end
    $var wire 32 Z% my_addr [31:0] $end
    $var wire 32 z my_id [31:0] $end
    $var wire 32 { my_id_D_IN [31:0] $end
    $var wire  1 | my_id_EN $end
    $var wire 32 b put_value_flit [31:0] $end
    $var wire  1 (! vir_chnl_1_CLR $end
    $var wire  1 )! vir_chnl_1_DEQ $end
    $var wire 32 &! vir_chnl_1_D_IN [31:0] $end
    $var wire 32 '! vir_chnl_1_D_OUT [31:0] $end
    $var wire  1 *! vir_chnl_1_EMPTY_N $end
    $var wire  1 +! vir_chnl_1_ENQ $end
    $var wire  1 ,! vir_chnl_1_FULL_N $end
    $var wire  1 /! vir_chnl_2_CLR $end
    $var wire  1 0! vir_chnl_2_DEQ $end
    $var wire 32 -! vir_chnl_2_D_IN [31:0] $end
    $var wire 32 .! vir_chnl_2_D_OUT [31:0] $end
    $var wire  1 1! vir_chnl_2_EMPTY_N $end
    $var wire  1 2! vir_chnl_2_ENQ $end
    $var wire  1 3! vir_chnl_2_FULL_N $end
    $var wire  1 6! vir_chnl_3_CLR $end
    $var wire  1 7! vir_chnl_3_DEQ $end
    $var wire 32 4! vir_chnl_3_D_IN [31:0] $end
    $var wire 32 5! vir_chnl_3_D_OUT [31:0] $end
    $var wire  1 8! vir_chnl_3_EMPTY_N $end
    $var wire  1 9! vir_chnl_3_ENQ $end
    $var wire  1 :! vir_chnl_3_FULL_N $end
    $var wire  1 =! vir_chnl_4_CLR $end
    $var wire  1 >! vir_chnl_4_DEQ $end
    $var wire 32 ;! vir_chnl_4_D_IN [31:0] $end
    $var wire 32 <! vir_chnl_4_D_OUT [31:0] $end
    $var wire  1 ?! vir_chnl_4_EMPTY_N $end
    $var wire  1 @! vir_chnl_4_ENQ $end
    $var wire  1 A! vir_chnl_4_FULL_N $end
    $var wire  1 D! vir_chnl_5_CLR $end
    $var wire  1 E! vir_chnl_5_DEQ $end
    $var wire 32 B! vir_chnl_5_D_IN [31:0] $end
    $var wire 32 C! vir_chnl_5_D_OUT [31:0] $end
    $var wire  1 F! vir_chnl_5_EMPTY_N $end
    $var wire  1 G! vir_chnl_5_ENQ $end
    $var wire  1 H! vir_chnl_5_FULL_N $end
    $var wire  1 K! vir_chnl_6_CLR $end
    $var wire  1 L! vir_chnl_6_DEQ $end
    $var wire 32 I! vir_chnl_6_D_IN [31:0] $end
    $var wire 32 J! vir_chnl_6_D_OUT [31:0] $end
    $var wire  1 M! vir_chnl_6_EMPTY_N $end
    $var wire  1 N! vir_chnl_6_ENQ $end
    $var wire  1 O! vir_chnl_6_FULL_N $end
    $scope module input_link $end
     $var wire  1 e! CLK $end
     $var wire  1 j! CLR $end
     $var wire  1 i! DEQ $end
     $var wire 32 g! D_IN [31:0] $end
     $var wire 32 m! D_OUT [31:0] $end
     $var wire  1 l! EMPTY_N $end
     $var wire  1 h! ENQ $end
     $var wire  1 k! FULL_N $end
     $var wire  1 f! RST $end
     $var wire  1 s! d0d1 $end
     $var wire  1 r! d0di $end
     $var wire  1 t! d0h $end
     $var wire  1 u! d1di $end
     $var wire 32 p! data0_reg [31:0] $end
     $var wire 32 q! data1_reg [31:0] $end
     $var wire  1 o! empty_reg $end
     $var wire  1 n! full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 v! deqerror $end
      $var wire  1 w! enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_1 $end
     $var wire  1 x! CLK $end
     $var wire  1 }! CLR $end
     $var wire  1 |! DEQ $end
     $var wire 32 z! D_IN [31:0] $end
     $var wire 32 "" D_OUT [31:0] $end
     $var wire  1 !" EMPTY_N $end
     $var wire  1 {! ENQ $end
     $var wire  1 ~! FULL_N $end
     $var wire  1 y! RST $end
     $var wire  1 (" d0d1 $end
     $var wire  1 '" d0di $end
     $var wire  1 )" d0h $end
     $var wire  1 *" d1di $end
     $var wire 32 %" data0_reg [31:0] $end
     $var wire 32 &" data1_reg [31:0] $end
     $var wire  1 $" empty_reg $end
     $var wire  1 #" full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 +" deqerror $end
      $var wire  1 ," enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_2 $end
     $var wire  1 -" CLK $end
     $var wire  1 2" CLR $end
     $var wire  1 1" DEQ $end
     $var wire 32 /" D_IN [31:0] $end
     $var wire 32 5" D_OUT [31:0] $end
     $var wire  1 4" EMPTY_N $end
     $var wire  1 0" ENQ $end
     $var wire  1 3" FULL_N $end
     $var wire  1 ." RST $end
     $var wire  1 ;" d0d1 $end
     $var wire  1 :" d0di $end
     $var wire  1 <" d0h $end
     $var wire  1 =" d1di $end
     $var wire 32 8" data0_reg [31:0] $end
     $var wire 32 9" data1_reg [31:0] $end
     $var wire  1 7" empty_reg $end
     $var wire  1 6" full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 >" deqerror $end
      $var wire  1 ?" enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_3 $end
     $var wire  1 @" CLK $end
     $var wire  1 E" CLR $end
     $var wire  1 D" DEQ $end
     $var wire 32 B" D_IN [31:0] $end
     $var wire 32 H" D_OUT [31:0] $end
     $var wire  1 G" EMPTY_N $end
     $var wire  1 C" ENQ $end
     $var wire  1 F" FULL_N $end
     $var wire  1 A" RST $end
     $var wire  1 N" d0d1 $end
     $var wire  1 M" d0di $end
     $var wire  1 O" d0h $end
     $var wire  1 P" d1di $end
     $var wire 32 K" data0_reg [31:0] $end
     $var wire 32 L" data1_reg [31:0] $end
     $var wire  1 J" empty_reg $end
     $var wire  1 I" full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 Q" deqerror $end
      $var wire  1 R" enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_4 $end
     $var wire  1 S" CLK $end
     $var wire  1 X" CLR $end
     $var wire  1 W" DEQ $end
     $var wire 32 U" D_IN [31:0] $end
     $var wire 32 [" D_OUT [31:0] $end
     $var wire  1 Z" EMPTY_N $end
     $var wire  1 V" ENQ $end
     $var wire  1 Y" FULL_N $end
     $var wire  1 T" RST $end
     $var wire  1 a" d0d1 $end
     $var wire  1 `" d0di $end
     $var wire  1 b" d0h $end
     $var wire  1 c" d1di $end
     $var wire 32 ^" data0_reg [31:0] $end
     $var wire 32 _" data1_reg [31:0] $end
     $var wire  1 ]" empty_reg $end
     $var wire  1 \" full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 d" deqerror $end
      $var wire  1 e" enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_5 $end
     $var wire  1 f" CLK $end
     $var wire  1 k" CLR $end
     $var wire  1 j" DEQ $end
     $var wire 32 h" D_IN [31:0] $end
     $var wire 32 n" D_OUT [31:0] $end
     $var wire  1 m" EMPTY_N $end
     $var wire  1 i" ENQ $end
     $var wire  1 l" FULL_N $end
     $var wire  1 g" RST $end
     $var wire  1 t" d0d1 $end
     $var wire  1 s" d0di $end
     $var wire  1 u" d0h $end
     $var wire  1 v" d1di $end
     $var wire 32 q" data0_reg [31:0] $end
     $var wire 32 r" data1_reg [31:0] $end
     $var wire  1 p" empty_reg $end
     $var wire  1 o" full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 w" deqerror $end
      $var wire  1 x" enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_6 $end
     $var wire  1 y" CLK $end
     $var wire  1 ~" CLR $end
     $var wire  1 }" DEQ $end
     $var wire 32 {" D_IN [31:0] $end
     $var wire 32 ## D_OUT [31:0] $end
     $var wire  1 "# EMPTY_N $end
     $var wire  1 |" ENQ $end
     $var wire  1 !# FULL_N $end
     $var wire  1 z" RST $end
     $var wire  1 )# d0d1 $end
     $var wire  1 (# d0di $end
     $var wire  1 *# d0h $end
     $var wire  1 +# d1di $end
     $var wire 32 &# data0_reg [31:0] $end
     $var wire 32 '# data1_reg [31:0] $end
     $var wire  1 %# empty_reg $end
     $var wire  1 $# full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 ,# deqerror $end
      $var wire  1 -# enqerror $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module router2 $end
    $var wire  1 |# CAN_FIRE_RL_invert_cycle $end
    $var wire  1 }# CAN_FIRE_RL_read_input_link_and_send_to_VC_even $end
    $var wire  1 ~# CAN_FIRE_RL_read_input_link_and_send_to_VC_odd $end
    $var wire  1 !$ CAN_FIRE_get_valueVC1 $end
    $var wire  1 "$ CAN_FIRE_get_valueVC2 $end
    $var wire  1 #$ CAN_FIRE_get_valueVC3 $end
    $var wire  1 $$ CAN_FIRE_get_valueVC4 $end
    $var wire  1 %$ CAN_FIRE_get_valueVC5 $end
    $var wire  1 &$ CAN_FIRE_get_valueVC6 $end
    $var wire  1 '$ CAN_FIRE_put_value $end
    $var wire  1 .# CLK $end
    $var wire  1 3# EN_get_valueVC1 $end
    $var wire  1 6# EN_get_valueVC2 $end
    $var wire  1 9# EN_get_valueVC3 $end
    $var wire  1 <# EN_get_valueVC4 $end
    $var wire  1 ?# EN_get_valueVC5 $end
    $var wire  1 B# EN_get_valueVC6 $end
    $var wire  1 1# EN_put_value $end
    $var wire  1 5# RDY_get_valueVC1 $end
    $var wire  1 8# RDY_get_valueVC2 $end
    $var wire  1 ;# RDY_get_valueVC3 $end
    $var wire  1 ># RDY_get_valueVC4 $end
    $var wire  1 A# RDY_get_valueVC5 $end
    $var wire  1 D# RDY_get_valueVC6 $end
    $var wire  1 2# RDY_put_value $end
    $var wire  1 /# RST_N $end
    $var wire  1 ($ WILL_FIRE_RL_invert_cycle $end
    $var wire  1 )$ WILL_FIRE_RL_read_input_link_and_send_to_VC_even $end
    $var wire  1 *$ WILL_FIRE_RL_read_input_link_and_send_to_VC_odd $end
    $var wire  1 +$ WILL_FIRE_get_valueVC1 $end
    $var wire  1 ,$ WILL_FIRE_get_valueVC2 $end
    $var wire  1 -$ WILL_FIRE_get_valueVC3 $end
    $var wire  1 .$ WILL_FIRE_get_valueVC4 $end
    $var wire  1 /$ WILL_FIRE_get_valueVC5 $end
    $var wire  1 0$ WILL_FIRE_get_valueVC6 $end
    $var wire  1 1$ WILL_FIRE_put_value $end
    $var wire 32 2$ b__h929 [31:0] $end
    $var wire  1 E# cycle $end
    $var wire  1 F# cycle_D_IN $end
    $var wire  1 G# cycle_EN $end
    $var wire 32 4# get_valueVC1 [31:0] $end
    $var wire 32 7# get_valueVC2 [31:0] $end
    $var wire 32 :# get_valueVC3 [31:0] $end
    $var wire 32 =# get_valueVC4 [31:0] $end
    $var wire 32 @# get_valueVC5 [31:0] $end
    $var wire 32 C# get_valueVC6 [31:0] $end
    $var wire  1 M# input_link_CLR $end
    $var wire  1 N# input_link_DEQ $end
    $var wire 32 K# input_link_D_IN [31:0] $end
    $var wire 32 L# input_link_D_OUT [31:0] $end
    $var wire  1 O# input_link_EMPTY_N $end
    $var wire  1 P# input_link_ENQ $end
    $var wire  1 Q# input_link_FULL_N $end
    $var wire 32 ]% my_addr [31:0] $end
    $var wire 32 H# my_id [31:0] $end
    $var wire 32 I# my_id_D_IN [31:0] $end
    $var wire  1 J# my_id_EN $end
    $var wire 32 0# put_value_flit [31:0] $end
    $var wire  1 T# vir_chnl_1_CLR $end
    $var wire  1 U# vir_chnl_1_DEQ $end
    $var wire 32 R# vir_chnl_1_D_IN [31:0] $end
    $var wire 32 S# vir_chnl_1_D_OUT [31:0] $end
    $var wire  1 V# vir_chnl_1_EMPTY_N $end
    $var wire  1 W# vir_chnl_1_ENQ $end
    $var wire  1 X# vir_chnl_1_FULL_N $end
    $var wire  1 [# vir_chnl_2_CLR $end
    $var wire  1 \# vir_chnl_2_DEQ $end
    $var wire 32 Y# vir_chnl_2_D_IN [31:0] $end
    $var wire 32 Z# vir_chnl_2_D_OUT [31:0] $end
    $var wire  1 ]# vir_chnl_2_EMPTY_N $end
    $var wire  1 ^# vir_chnl_2_ENQ $end
    $var wire  1 _# vir_chnl_2_FULL_N $end
    $var wire  1 b# vir_chnl_3_CLR $end
    $var wire  1 c# vir_chnl_3_DEQ $end
    $var wire 32 `# vir_chnl_3_D_IN [31:0] $end
    $var wire 32 a# vir_chnl_3_D_OUT [31:0] $end
    $var wire  1 d# vir_chnl_3_EMPTY_N $end
    $var wire  1 e# vir_chnl_3_ENQ $end
    $var wire  1 f# vir_chnl_3_FULL_N $end
    $var wire  1 i# vir_chnl_4_CLR $end
    $var wire  1 j# vir_chnl_4_DEQ $end
    $var wire 32 g# vir_chnl_4_D_IN [31:0] $end
    $var wire 32 h# vir_chnl_4_D_OUT [31:0] $end
    $var wire  1 k# vir_chnl_4_EMPTY_N $end
    $var wire  1 l# vir_chnl_4_ENQ $end
    $var wire  1 m# vir_chnl_4_FULL_N $end
    $var wire  1 p# vir_chnl_5_CLR $end
    $var wire  1 q# vir_chnl_5_DEQ $end
    $var wire 32 n# vir_chnl_5_D_IN [31:0] $end
    $var wire 32 o# vir_chnl_5_D_OUT [31:0] $end
    $var wire  1 r# vir_chnl_5_EMPTY_N $end
    $var wire  1 s# vir_chnl_5_ENQ $end
    $var wire  1 t# vir_chnl_5_FULL_N $end
    $var wire  1 w# vir_chnl_6_CLR $end
    $var wire  1 x# vir_chnl_6_DEQ $end
    $var wire 32 u# vir_chnl_6_D_IN [31:0] $end
    $var wire 32 v# vir_chnl_6_D_OUT [31:0] $end
    $var wire  1 y# vir_chnl_6_EMPTY_N $end
    $var wire  1 z# vir_chnl_6_ENQ $end
    $var wire  1 {# vir_chnl_6_FULL_N $end
    $scope module input_link $end
     $var wire  1 3$ CLK $end
     $var wire  1 8$ CLR $end
     $var wire  1 7$ DEQ $end
     $var wire 32 5$ D_IN [31:0] $end
     $var wire 32 ;$ D_OUT [31:0] $end
     $var wire  1 :$ EMPTY_N $end
     $var wire  1 6$ ENQ $end
     $var wire  1 9$ FULL_N $end
     $var wire  1 4$ RST $end
     $var wire  1 A$ d0d1 $end
     $var wire  1 @$ d0di $end
     $var wire  1 B$ d0h $end
     $var wire  1 C$ d1di $end
     $var wire 32 >$ data0_reg [31:0] $end
     $var wire 32 ?$ data1_reg [31:0] $end
     $var wire  1 =$ empty_reg $end
     $var wire  1 <$ full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 D$ deqerror $end
      $var wire  1 E$ enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_1 $end
     $var wire  1 F$ CLK $end
     $var wire  1 K$ CLR $end
     $var wire  1 J$ DEQ $end
     $var wire 32 H$ D_IN [31:0] $end
     $var wire 32 N$ D_OUT [31:0] $end
     $var wire  1 M$ EMPTY_N $end
     $var wire  1 I$ ENQ $end
     $var wire  1 L$ FULL_N $end
     $var wire  1 G$ RST $end
     $var wire  1 T$ d0d1 $end
     $var wire  1 S$ d0di $end
     $var wire  1 U$ d0h $end
     $var wire  1 V$ d1di $end
     $var wire 32 Q$ data0_reg [31:0] $end
     $var wire 32 R$ data1_reg [31:0] $end
     $var wire  1 P$ empty_reg $end
     $var wire  1 O$ full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 W$ deqerror $end
      $var wire  1 X$ enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_2 $end
     $var wire  1 Y$ CLK $end
     $var wire  1 ^$ CLR $end
     $var wire  1 ]$ DEQ $end
     $var wire 32 [$ D_IN [31:0] $end
     $var wire 32 a$ D_OUT [31:0] $end
     $var wire  1 `$ EMPTY_N $end
     $var wire  1 \$ ENQ $end
     $var wire  1 _$ FULL_N $end
     $var wire  1 Z$ RST $end
     $var wire  1 g$ d0d1 $end
     $var wire  1 f$ d0di $end
     $var wire  1 h$ d0h $end
     $var wire  1 i$ d1di $end
     $var wire 32 d$ data0_reg [31:0] $end
     $var wire 32 e$ data1_reg [31:0] $end
     $var wire  1 c$ empty_reg $end
     $var wire  1 b$ full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 j$ deqerror $end
      $var wire  1 k$ enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_3 $end
     $var wire  1 l$ CLK $end
     $var wire  1 q$ CLR $end
     $var wire  1 p$ DEQ $end
     $var wire 32 n$ D_IN [31:0] $end
     $var wire 32 t$ D_OUT [31:0] $end
     $var wire  1 s$ EMPTY_N $end
     $var wire  1 o$ ENQ $end
     $var wire  1 r$ FULL_N $end
     $var wire  1 m$ RST $end
     $var wire  1 z$ d0d1 $end
     $var wire  1 y$ d0di $end
     $var wire  1 {$ d0h $end
     $var wire  1 |$ d1di $end
     $var wire 32 w$ data0_reg [31:0] $end
     $var wire 32 x$ data1_reg [31:0] $end
     $var wire  1 v$ empty_reg $end
     $var wire  1 u$ full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 }$ deqerror $end
      $var wire  1 ~$ enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_4 $end
     $var wire  1 !% CLK $end
     $var wire  1 &% CLR $end
     $var wire  1 %% DEQ $end
     $var wire 32 #% D_IN [31:0] $end
     $var wire 32 )% D_OUT [31:0] $end
     $var wire  1 (% EMPTY_N $end
     $var wire  1 $% ENQ $end
     $var wire  1 '% FULL_N $end
     $var wire  1 "% RST $end
     $var wire  1 /% d0d1 $end
     $var wire  1 .% d0di $end
     $var wire  1 0% d0h $end
     $var wire  1 1% d1di $end
     $var wire 32 ,% data0_reg [31:0] $end
     $var wire 32 -% data1_reg [31:0] $end
     $var wire  1 +% empty_reg $end
     $var wire  1 *% full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 2% deqerror $end
      $var wire  1 3% enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_5 $end
     $var wire  1 4% CLK $end
     $var wire  1 9% CLR $end
     $var wire  1 8% DEQ $end
     $var wire 32 6% D_IN [31:0] $end
     $var wire 32 <% D_OUT [31:0] $end
     $var wire  1 ;% EMPTY_N $end
     $var wire  1 7% ENQ $end
     $var wire  1 :% FULL_N $end
     $var wire  1 5% RST $end
     $var wire  1 B% d0d1 $end
     $var wire  1 A% d0di $end
     $var wire  1 C% d0h $end
     $var wire  1 D% d1di $end
     $var wire 32 ?% data0_reg [31:0] $end
     $var wire 32 @% data1_reg [31:0] $end
     $var wire  1 >% empty_reg $end
     $var wire  1 =% full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 E% deqerror $end
      $var wire  1 F% enqerror $end
     $upscope $end
    $upscope $end
    $scope module vir_chnl_6 $end
     $var wire  1 G% CLK $end
     $var wire  1 L% CLR $end
     $var wire  1 K% DEQ $end
     $var wire 32 I% D_IN [31:0] $end
     $var wire 32 O% D_OUT [31:0] $end
     $var wire  1 N% EMPTY_N $end
     $var wire  1 J% ENQ $end
     $var wire  1 M% FULL_N $end
     $var wire  1 H% RST $end
     $var wire  1 U% d0d1 $end
     $var wire  1 T% d0di $end
     $var wire  1 V% d0h $end
     $var wire  1 W% d1di $end
     $var wire 32 R% data0_reg [31:0] $end
     $var wire 32 S% data1_reg [31:0] $end
     $var wire  1 Q% empty_reg $end
     $var wire  1 P% full_reg $end
     $var wire  1 \% guarded [0:0] $end
     $var wire 32 [% width [31:0] $end
     $scope module error_checks $end
      $var wire  1 X% deqerror $end
      $var wire  1 Y% enqerror $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
1$
1%
1&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
0)
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
0,
b00000000000000000000000000000000 -
b00000000000000000000000000000001 .
1/
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b11111111111111111111111111111111 6
07
08
09
0:
0;
0<
1=
0>
0?
0@
0A
0B
0C
1D
b00000000000000000000000000000000 E
0F
0G
0H
0I
0J
0K
0L
1M
0N
0O
0P
0Q
0R
0S
0T
1U
1V
0W
0X
0Y
0Z
0[
0\
0]
1^
0_
1`
1a
b11111111111111111111111111111111 b
1c
1d
0e
b00000000000000000000000000000000 f
0g
0h
b00000000000000000000000000000000 i
0j
0k
b00000000000000000000000000000000 l
0m
0n
b00000000000000000000000000000000 o
0p
0q
b00000000000000000000000000000000 r
0s
0t
b00000000000000000000000000000000 u
0v
0w
1x
1y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
0|
b11111111111111111111111111111111 }
b00000000000000000000000000000000 ~
0!!
0"!
0#!
1$!
1%!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
0(!
0)!
0*!
0+!
1,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
0/!
00!
01!
02!
13!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
06!
07!
08!
09!
1:!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
0=!
0>!
0?!
0@!
1A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
0D!
0E!
0F!
0G!
1H!
b00000000000000000000000000000000 I!
b00000000000000000000000000000000 J!
0K!
0L!
0M!
0N!
1O!
1P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
1Y!
1Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
1c!
b00000000000000000000000000000000 d!
1e!
1f!
b11111111111111111111111111111111 g!
1h!
0i!
0j!
1k!
0l!
b00000000000000000000000000000000 m!
1n!
0o!
b00000000000000000000000000000000 p!
b00000000000000000000000000000000 q!
1r!
0s!
0t!
0u!
0v!
0w!
1x!
1y!
b00000000000000000000000000000000 z!
0{!
0|!
0}!
1~!
0!"
b00000000000000000000000000000000 ""
1#"
0$"
b00000000000000000000000000000000 %"
b00000000000000000000000000000000 &"
0'"
0("
1)"
0*"
0+"
0,"
1-"
1."
b00000000000000000000000000000000 /"
00"
01"
02"
13"
04"
b00000000000000000000000000000000 5"
16"
07"
b00000000000000000000000000000000 8"
b00000000000000000000000000000000 9"
0:"
0;"
1<"
0="
0>"
0?"
1@"
1A"
b00000000000000000000000000000000 B"
0C"
0D"
0E"
1F"
0G"
b00000000000000000000000000000000 H"
1I"
0J"
b00000000000000000000000000000000 K"
b00000000000000000000000000000000 L"
0M"
0N"
1O"
0P"
0Q"
0R"
1S"
1T"
b00000000000000000000000000000000 U"
0V"
0W"
0X"
1Y"
0Z"
b00000000000000000000000000000000 ["
1\"
0]"
b00000000000000000000000000000000 ^"
b00000000000000000000000000000000 _"
0`"
0a"
1b"
0c"
0d"
0e"
1f"
1g"
b00000000000000000000000000000000 h"
0i"
0j"
0k"
1l"
0m"
b00000000000000000000000000000000 n"
1o"
0p"
b00000000000000000000000000000000 q"
b00000000000000000000000000000000 r"
0s"
0t"
1u"
0v"
0w"
0x"
1y"
1z"
b00000000000000000000000000000000 {"
0|"
0}"
0~"
1!#
0"#
b00000000000000000000000000000000 ##
1$#
0%#
b00000000000000000000000000000000 &#
b00000000000000000000000000000000 '#
0(#
0)#
1*#
0+#
0,#
0-#
1.#
1/#
b00000000000000000000000000000000 0#
01#
12#
03#
b00000000000000000000000000000000 4#
05#
06#
b00000000000000000000000000000000 7#
08#
09#
b00000000000000000000000000000000 :#
0;#
0<#
b00000000000000000000000000000000 =#
0>#
0?#
b00000000000000000000000000000000 @#
0A#
0B#
b00000000000000000000000000000000 C#
0D#
0E#
1F#
1G#
b00000000000000000000000000000001 H#
b00000000000000000000000000000000 I#
0J#
b00000000000000000000000000000000 K#
b00000000000000000000000000000000 L#
0M#
0N#
0O#
0P#
1Q#
b00000000000000000000000000000000 R#
b00000000000000000000000000000000 S#
0T#
0U#
0V#
0W#
1X#
b00000000000000000000000000000000 Y#
b00000000000000000000000000000000 Z#
0[#
0\#
0]#
0^#
1_#
b00000000000000000000000000000000 `#
b00000000000000000000000000000000 a#
0b#
0c#
0d#
0e#
1f#
b00000000000000000000000000000000 g#
b00000000000000000000000000000000 h#
0i#
0j#
0k#
0l#
1m#
b00000000000000000000000000000000 n#
b00000000000000000000000000000000 o#
0p#
0q#
0r#
0s#
1t#
b00000000000000000000000000000000 u#
b00000000000000000000000000000000 v#
0w#
0x#
0y#
0z#
1{#
1|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
1'$
1($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
b00000000000000000000000000000000 2$
13$
14$
b00000000000000000000000000000000 5$
06$
07$
08$
19$
0:$
b00000000000000000000000000000000 ;$
1<$
0=$
b00000000000000000000000000000000 >$
b00000000000000000000000000000000 ?$
0@$
0A$
1B$
0C$
0D$
0E$
1F$
1G$
b00000000000000000000000000000000 H$
0I$
0J$
0K$
1L$
0M$
b00000000000000000000000000000000 N$
1O$
0P$
b00000000000000000000000000000000 Q$
b00000000000000000000000000000000 R$
0S$
0T$
1U$
0V$
0W$
0X$
1Y$
1Z$
b00000000000000000000000000000000 [$
0\$
0]$
0^$
1_$
0`$
b00000000000000000000000000000000 a$
1b$
0c$
b00000000000000000000000000000000 d$
b00000000000000000000000000000000 e$
0f$
0g$
1h$
0i$
0j$
0k$
1l$
1m$
b00000000000000000000000000000000 n$
0o$
0p$
0q$
1r$
0s$
b00000000000000000000000000000000 t$
1u$
0v$
b00000000000000000000000000000000 w$
b00000000000000000000000000000000 x$
0y$
0z$
1{$
0|$
0}$
0~$
1!%
1"%
b00000000000000000000000000000000 #%
0$%
0%%
0&%
1'%
0(%
b00000000000000000000000000000000 )%
1*%
0+%
b00000000000000000000000000000000 ,%
b00000000000000000000000000000000 -%
0.%
0/%
10%
01%
02%
03%
14%
15%
b00000000000000000000000000000000 6%
07%
08%
09%
1:%
0;%
b00000000000000000000000000000000 <%
1=%
0>%
b00000000000000000000000000000000 ?%
b00000000000000000000000000000000 @%
0A%
0B%
1C%
0D%
0E%
0F%
1G%
1H%
b00000000000000000000000000000000 I%
0J%
0K%
0L%
1M%
0N%
b00000000000000000000000000000000 O%
1P%
0Q%
b00000000000000000000000000000000 R%
b00000000000000000000000000000000 S%
0T%
0U%
1V%
0W%
0X%
0Y%
b00000000000000000000000000000000 Z%
b00000000000000000000000000100000 [%
1\%
b00000000000000000000000000000001 ]%
#5
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#10
1#
1%
b00000000000000000000000000000001 -
b00000000000000000000000000000010 .
b10000000000000000000000000000000 6
0M
1N
0V
1W
1`
b10000000000000000000000000000000 b
1w
0x
b10000000000000000000000000000000 }
b11111111111111111111111111111111 ~
1"!
1#!
b11111111111111111111111111111111 &!
b11111111111111111111111111111111 -!
b11111111111111111111111111111111 4!
b11111111111111111111111111111111 ;!
b11111111111111111111111111111111 B!
1G!
b11111111111111111111111111111111 I!
1R!
1\!
b00000000000000000000000000000001 d!
1e!
b10000000000000000000000000000000 g!
1i!
1l!
b11111111111111111111111111111111 m!
1o!
b11111111111111111111111111111111 p!
1u!
1x!
b11111111111111111111111111111111 z!
1-"
b11111111111111111111111111111111 /"
1@"
b11111111111111111111111111111111 B"
1S"
b11111111111111111111111111111111 U"
1f"
b11111111111111111111111111111111 h"
1i"
1s"
0u"
1y"
b11111111111111111111111111111111 {"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#15
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#20
1#
1%
b00000000000000000000000000000010 -
b00000000000000000000000000000011 .
b11111111111111111111111111111111 4
b11111111111111111111111111111111 6
1;
0=
1B
0N
1S
0W
1\
1_
1`
b11111111111111111111111111111111 b
0c
1q
b11111111111111111111111111111111 r
1s
0w
1x
b11111111111111111111111111111111 }
b10000000000000000000000000000000 ~
0$!
b10000000000000000000000000000000 &!
b10000000000000000000000000000000 -!
b10000000000000000000000000000000 4!
b10000000000000000000000000000000 ;!
b10000000000000000000000000000000 B!
b11111111111111111111111111111111 C!
1E!
1F!
0G!
b10000000000000000000000000000000 I!
1N!
1Q!
0R!
1W!
1[!
0\!
1a!
0c!
1e!
b11111111111111111111111111111111 g!
0h!
b10000000000000000000000000000000 m!
b10000000000000000000000000000000 p!
b10000000000000000000000000000000 q!
0r!
1t!
0u!
1x!
b10000000000000000000000000000000 z!
1-"
b10000000000000000000000000000000 /"
1@"
b10000000000000000000000000000000 B"
1S"
b10000000000000000000000000000000 U"
1f"
b10000000000000000000000000000000 h"
0i"
1j"
1m"
b11111111111111111111111111111111 n"
1p"
b11111111111111111111111111111111 q"
0s"
1u"
1y"
b10000000000000000000000000000000 {"
1|"
1(#
0*#
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#25
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#30
1#
1%
b00000000000000000000000000000011 -
b00000000000000000000000000000100 .
b10000000000000000000000000000000 5
0;
1<
0B
1C
0S
1T
0\
1]
1`
0q
0s
1t
b10000000000000000000000000000000 u
1v
1w
0x
0"!
0#!
0E!
0F!
b10000000000000000000000000000000 J!
1L!
1M!
0N!
0Q!
0W!
1X!
0[!
0a!
1b!
1e!
0i!
0l!
0o!
1x!
1-"
1@"
1S"
1f"
0j"
0m"
0p"
1y"
0|"
1}"
1"#
b10000000000000000000000000000000 ##
1%#
b10000000000000000000000000000000 &#
0(#
1*#
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#35
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#40
1#
1%
b00000000000000000000000000000100 -
b00000000000000000000000000000101 .
0<
0C
0T
0]
1`
0t
0v
0w
1x
0L!
0M!
0X!
0b!
1e!
1x!
1-"
1@"
1S"
1f"
1y"
0}"
0"#
0%#
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#45
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#50
1#
1%
b00000000000000000000000000000101 -
b00000000000000000000000000000110 .
1`
1w
0x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#55
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#60
1#
1%
b00000000000000000000000000000110 -
b00000000000000000000000000000111 .
1`
0w
1x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#65
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#70
1#
1%
b00000000000000000000000000000111 -
b00000000000000000000000000001000 .
1`
1w
0x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#75
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#80
1#
1%
b00000000000000000000000000001000 -
b00000000000000000000000000001001 .
1`
0w
1x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#85
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#90
1#
1%
b00000000000000000000000000001001 -
b00000000000000000000000000001010 .
1`
1w
0x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#95
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#100
1#
1%
b00000000000000000000000000001010 -
b00000000000000000000000000001011 .
1`
0w
1x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#105
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#110
1#
1%
b00000000000000000000000000001011 -
b00000000000000000000000000001100 .
1`
1w
0x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#115
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#120
1#
1%
b00000000000000000000000000001100 -
b00000000000000000000000000001101 .
1`
0w
1x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#125
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#130
1#
1%
b00000000000000000000000000001101 -
b00000000000000000000000000001110 .
1`
1w
0x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
1E#
0F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#135
0#
0%
0`
0e!
0x!
0-"
0@"
0S"
0f"
0y"
0.#
03$
0F$
0Y$
0l$
0!%
04%
0G%
#140
1#
1%
b00000000000000000000000000001110 -
b00000000000000000000000000001111 .
1`
0w
1x
1e!
1x!
1-"
1@"
1S"
1f"
1y"
1.#
0E#
1F#
13$
1F$
1Y$
1l$
1!%
14%
1G%
#141
